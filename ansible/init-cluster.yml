- hosts: all
  become: yes
  tasks:

    - name: Reset existing cluster if any
      when: reset_cluster
      shell: "kubeadm reset --force"

- hosts: master
  become: yes
  tasks:

    - name: Reset existing cluster iptables
      when: reset_cluster
      shell: "iptables -F && iptables -t nat -F && iptables -t mangle -F && iptables -X"
      register: reset_iptables
  
    - name: Initialize cluster
      when: reset_cluster
      when: reset_iptables is succeeded
      shell: kubeadm init --token {{ token }} \ 
        --kubernetes-version {{ kube_version }} \
        --pod-network-cidr {{ pod_network_cidr }}

      register: cluster_initialized

    - name: Create .kube directory
      when: cluster_initialized is succeeded
      become_user: kube
      when: cluster_initialized is succeeded
      file: path=$HOME/.kube state=directory mode=0755

    - name: Copy admin.conf to user's home directory
      when: cluster_initialized is succeeded
      copy: src=/etc/kubernetes/admin.conf dest=/home/kube/.kube/config remote_src=yes owner=kube
    
    - name: Create flannel network when proxy server is configured in environment
      when: proxy_setup
      become_user: kube
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/62e44c867a2846fefb68bd5f178daf4da3095ccb/Documentation/kube-flannel.yml
      environment: "{{ proxy_env }}"
      args:
        chdir: $HOME
      register: netowrk_created

    - name: Create flannel network
      when: cluster_initialized is succeeded
      become_user: kube
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/62e44c867a2846fefb68bd5f178daf4da3095ccb/Documentation/kube-flannel.yml
      args:
        chdir: $HOME
      register: netowrk_created

    - name: Get cluster join command
      when: netowrk_created is succeeded
      become_user: kube
      shell: kubeadm token create --print-join-command
      register: join_command_raw
    - debug:
        var: join_command_raw.stdout
      retries: 3
      delay: 3

- hosts: workers
  become: yes
  tasks:

    - name: Join Cluster
      shell: "{{ hostvars[groups['master'][0]]['join_command_raw'].stdout }}"
      register: join_cluster 
